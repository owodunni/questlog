import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

plugins {
  id "questlog.java-conventions"
  id "org.openapi.generator" version "5.1.0"
}

version "0.1.0"

def apiSpec = "$projectDir/openapi.yaml"
def packageName = "io.questlog"
def artifactDir = "$buildDir/api"

def generators = [
  "python-flask",
  "dart",
  "html2"
]

openApiValidate {
  inputSpec = apiSpec
  recommend = true
}

assemble.dependsOn  "openApiValidate"

generators.forEach { generator ->
  def name = generator.capitalize().replace("-","")

  def generatorTask = tasks.create(name: "generate${name}", type: GenerateTask) {
    generatorName = generator
    inputSpec = apiSpec
    outputDir = "$artifactDir/$name"
    validateSpec = true
    apiPackage = "${packageName}.api"
    invokerPackage = "${packageName}.invoker"
    modelPackage = "${packageName}.model"
  }
  assemble.dependsOn generatorTask
}

task buildPythonServer(type: GenerateTask){
  generatorName = "python-flask"
}

class KonsoleTask extends DefaultTask {
  @Input
  String command

  @TaskAction
  void launchKonsole() {
    ext.process = new ProcessBuilder()
        .directory(project.projectDir)
        .command('konsole', '--noclose', '-e', command)
        .start()
  }
}

task develop(type: KonsoleTask) {
  command = "docker run -p 8080:8080 -v $projectDir:/tmp -e SWAGGER_FILE=$apiSpec swaggerapi/swagger-editor"
}
