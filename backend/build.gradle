plugins {
  id "questlog.java-conventions"
}

version "0.1.0"

def depsDir = "$buildDir/extractedDpendencies"
def testResultDir = "$buildDir/outputs/tests"
def srcDir = "$projectDir/questlog"
def generatedDir = "$srcDir/generated"

configurations {
  api
}

dependencies {
  api project(path: ":api")
}


task pip(type: PipTask) {
  workingDir projectDir
  setPipFiles([
    "requirements.txt",
    "test-requirements.txt"
  ])
}

task initialize(){
  dependsOn pip
}

task extractDependencies(type: Copy) {
  dependsOn configurations.api
  from {
    configurations.api.collect {
      tarTree(it)
    }
  }
  into depsDir
}

task extractModels(type: Copy) {
  dependsOn extractDependencies
  from "$depsDir/io.questlog.api-0.1.0/questlog/generated"
  into "$generatedDir"
}

task extractApi(type: Copy) {
  dependsOn extractDependencies
  from "$depsDir/io.questlog.api-0.1.0/questlog/openapi"
  into "$generatedDir/api"
}

task assembleBackend(){
  dependsOn extractApi, extractModels
}

task build(type: Exec) {
  dependsOn assembleBackend
  workingDir projectDir

  commandLine "pytest", "-v", "--pyargs", "$srcDir/test",
      "--cov-report", "html:$testResultDir/cov/html",
      "--cov-report", "xml:$testResultDir/cov/coverage.xml",
      "--junitxml=$testResultDir/surefire-reports/TEST-report.xml",
      "--cov=$srcDir", "--integration"
}

task assemble{
  group "build"
  description "Assemble backend"
  dependsOn assembleBackend
}
